// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp1.Data;

namespace WebApp1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210912181539_Third config")]
    partial class Thirdconfig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApp1.Models.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Test1",
                            Name = "Verktøy"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Test2",
                            Name = "Kjøretøy"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Test3",
                            Name = "Dagligvarer"
                        });
                });

            modelBuilder.Entity("WebApp1.Models.Entities.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturer");

                    b.HasData(
                        new
                        {
                            ManufacturerId = 1,
                            Description = "Test1",
                            Name = "Fiskars"
                        },
                        new
                        {
                            ManufacturerId = 2,
                            Description = "Test2",
                            Name = "Bosch"
                        },
                        new
                        {
                            ManufacturerId = 3,
                            Description = "Test3",
                            Name = "Myklevold"
                        },
                        new
                        {
                            ManufacturerId = 4,
                            Description = "Test4",
                            Name = "Volvo"
                        });
                });

            modelBuilder.Entity("WebApp1.Models.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ManufacturerId = 1,
                            Name = "Hammer",
                            Price = 121.50m
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            ManufacturerId = 2,
                            Name = "Vinkelsliper",
                            Price = 1520.00m
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            ManufacturerId = 4,
                            Name = "Volvo XC90",
                            Price = 990000m
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            ManufacturerId = 4,
                            Name = "Volvo XC60",
                            Price = 620000m
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3,
                            ManufacturerId = 3,
                            Name = "Brød",
                            Price = 25.50m
                        });
                });

            modelBuilder.Entity("WebApp1.Models.Entities.Product", b =>
                {
                    b.HasOne("WebApp1.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp1.Models.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("WebApp1.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebApp1.Models.Entities.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
